{"version":3,"sources":["components/Global/images/logo.svg","components/Global/Header.js","components/Global/Content.js","components/Global/Footer.js","data/menu.js","components/App.js","components/About/index.js","components/Contact/index.js","components/Home/index.js","components/Page404/index.js","routes.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Header","_this$props","this","props","title","items","react_default","a","createElement","className","src","logo","alt","map","item","key","Link","to","url","Component","Content","body","Footer","_this$props$copyright","copyright","menu","App","children","Global_Header","Global_Content","Global_Footer","About","Contact","Home","Page404","AppRoutes","components_App","Switch","Route","exact","path","component","Boolean","window","location","hostname","match","render","BrowserRouter","routes","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,yTCsCzBC,0LAtBJ,IAAAC,EACiBC,KAAKC,MAArBC,EADDH,EACCG,MAAOC,EADRJ,EACQI,MACf,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,OAAKE,IAAKC,IAAMF,UAAU,WAAWG,IAAI,SAEzCN,EAAAC,EAAAC,cAAA,UAAKJ,GAELE,EAAAC,EAAAC,cAAA,MAAIC,UAAU,QAEVJ,GAASA,EAAMQ,IACb,SAACC,EAAMC,GAAP,OAAeT,EAAAC,EAAAC,cAAA,MAAIO,IAAKA,GAAKT,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CAAMC,GAAIH,EAAKI,KAAMJ,EAAKV,oBAlBlDe,cCYNC,0LAVJ,IACCC,EAASnB,KAAKC,MAAdkB,KACR,OACEf,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACZY,UATaF,cCePG,0LAXF,IAAAC,EACuCrB,KAAKC,MAAzCqB,iBADH,IAAAD,EACe,oBADfA,EAEL,OACAjB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAAA,UAAKgB,WARIL,cCPNM,EAAA,CACX,CACErB,MAAO,OACPc,IAAK,KAEP,CACEd,MAAO,WACPc,IAAK,UAEP,CACEd,MAAO,aACPc,IAAK,aCoBIQ,mLAfJ,IACCC,EAAazB,KAAKC,MAAlBwB,SACR,OACErB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAACoB,EAAD,CACExB,MAAM,aACNC,MAAOA,IAETC,EAAAC,EAAAC,cAACqB,EAAD,CAASR,KAAMM,IACfrB,EAAAC,EAAAC,cAACsB,EAAD,CAAQN,UAAU,6BAbRL,aCCHY,mLARX,OACEzB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,gCAJYW,aCULa,mLARX,OACE1B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,kCAJcW,aCUPc,mLARX,OACE3B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,+BAJWW,aCUJe,mLARX,OACE5B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,kCAJcW,aCmBPgB,EAVG,kBAChB7B,EAAAC,EAAAC,cAAC4B,EAAD,KACE9B,EAAAC,EAAAC,cAAC6B,EAAA,EAAD,KACE/B,EAAAC,EAAAC,cAAC8B,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,SAASC,UAAWV,IACtCzB,EAAAC,EAAAC,cAAC8B,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,WAAWC,UAAWT,IACxC1B,EAAAC,EAAAC,cAAC8B,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWR,IACjC3B,EAAAC,EAAAC,cAAC8B,EAAA,EAAD,CAAOG,UAAWP,OCNJQ,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCJNC,iBACEzC,EAAAC,EAAAC,cAACwC,EAAA,EAAD,KACE1C,EAAAC,EAAAC,cAACyC,EAAD,OAEFC,SAASC,eAAe,SD+GpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.01a02484.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","//Dependencies\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\n\n//Assets\nimport logo from './images/logo.svg';\nimport './css/header.css';\n\nclass Header extends Component {\n  static propTypes = {\n    title: PropTypes.string.isRequired,\n    items: PropTypes.array.isRequired\n  };\n\n  render() {\n    const { title, items} = this.props;\n    return (\n      <div className=\"Header\">\n        <div className=\"Logo\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n\n          <h2>{title}</h2>\n\n          <ul className=\"Menu\">\n            {\n              items && items.map(\n                (item, key) => <li key={key}><Link to={item.url}>{item.title}</Link></li>\n              )\n            }\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Header;\n","//Dependencies\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\n//Assets\nimport './css/App.css';\n\nclass Content extends Component {\n  static propTypes = {\n    body: PropTypes.object.isRequired\n  };\n\n  render() {\n    const { body } = this.props;\n    return (\n      <div className=\"Content\">\n        {body}\n      </div>\n    );\n  }\n}\n\nexport default Content;\n","//Dependencies\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\n//Assets\nimport './css/footer.css';\n\nclass Footer extends Component {\n    static propTypes = {\n        copyright: PropTypes.string\n    };\n    render() {\n        const { copyright = '&copy; React 2018' } = this.props;\n        return (\n        <div className=\"Footer\">\n            <h1>{copyright}</h1>\n            \n        </div>\n        );\n    }\n}\n\nexport default Footer;\n","export default [\n    {\n      title: 'Home',\n      url: '/'\n    },\n    {\n      title: 'About Us',\n      url: '/about'\n    },\n    {\n      title: 'Contact Us',\n      url: '/contact'\n    }\n  ];\n","//Dependencies\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\n// Components\nimport Header from './Global/Header';\nimport Content from './Global/Content';\nimport Footer from './Global/Footer';\n\n//Data\nimport items from '../data/menu';\n///\nclass App extends Component {\n  static propTypes = {\n    children: PropTypes.object.isRequired\n  };\n  render() {\n    const { children } = this.props;\n    return (\n      <div className=\"App\">\n        <Header\n          title=\"ReactMyApp\"\n          items={items}\n        />\n        <Content body={children} />\n        <Footer copyright=\"&copy; eapb96 2018\" />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","//Dependencies\nimport React, { Component } from 'react';\n\nclass About extends Component {\n  render(){\n    return(\n      <div className=\"About\">\n        <h1>About Page</h1>\n      </div>\n    );\n  }\n}\n\nexport default About;\n","//Dependencies\nimport React, { Component } from 'react';\n\nclass Contact extends Component {\n  render(){\n    return(\n      <div className=\"Contact\">\n        <h1>Contact Page</h1>\n      </div>\n    );\n  }\n}\n\nexport default Contact;\n","//Dependencies\nimport React, { Component } from 'react';\n\nclass Home extends Component {\n  render(){\n    return(\n      <div className=\"Home\">\n        <h1>Home Page</h1>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","//Dependencies\nimport React, { Component } from 'react';\n\nclass Page404 extends Component {\n  render(){\n    return(\n      <div className=\"Page404\">\n        <h1>Page404 Page</h1>\n      </div>\n    );\n  }\n}\n\nexport default Page404;\n","//Dependencies\nimport React from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\n//Components\nimport App from './components/App';\nimport About from './components/About';\nimport Contact from './components/Contact';\nimport Home from './components/Home';\nimport Page404 from './components/Page404';\n\n\nconst AppRoutes = () =>\n  <App>\n    <Switch>\n      <Route exact path=\"/about\" component={About}/>\n      <Route exact path=\"/contact\" component={Contact}/>\n      <Route exact path=\"/\" component={Home}/>\n      <Route component={Page404}/>\n    </Switch>\n  </App>;\n\nexport default AppRoutes;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","// Dependencies\nimport React from 'react';\nimport { render } from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\n//Assets\nimport './index.css';\n\n//Routes\n///import App from './components/App';\nimport AppRoutes from './routes';\n\nimport * as serviceWorker from './serviceWorker';\n\nrender(\n  <Router>\n    <AppRoutes />\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}